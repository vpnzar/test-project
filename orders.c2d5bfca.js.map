{"version":3,"sources":["js/orders.js"],"names":["inputContact","document","querySelector","inputResult","inputForm","inputTel","inputAddress","inputAddressPost","submitBtn","dataListConfirm","inputData","inputOrderNumber","inputPayForm","inputPayControl","inputDelivery","additionText","console","log","addEventListener","bodyMarkup","showNameInput","confirmInfo","contactProps","e","preventDefault","resultFromAPI","target","value","innerHTML","wordsJsonData","fetch","key","json","then","text","renderCollection","contacts","showNameList","countryNameArray","arr","forEach","el","push","properties","insertAdjacentHTML","firstname","textContent","prop","hs_calculated_mobile_number","company","address","country"],"mappings":";AAAA,MAAMA,EAAeC,SAASC,cAAc,WACtCC,EAAcF,SAASC,cAAc,kBACrCE,EAAYH,SAASC,cAAc,gBACnCG,EAAWJ,SAASC,cAAc,QAClCI,EAAeL,SAASC,cAAc,mBACtCK,EAAmBN,SAASC,cAAc,iBAC1CM,EAAYP,SAASC,cAAc,WACnCO,EAAkBR,SAASC,cAAc,cACzCQ,EAAYT,SAASC,cAAc,SACnCS,EAAmBV,SAASC,cAAc,iBAC1CU,EAAeX,SAASC,cAAc,aACtCW,EAAkBZ,SAASC,cAAc,gBACzCY,EAAgBb,SAASC,cAAc,aACvCa,EAAed,SAASC,cAAc,aAC5Cc,QAAQC,IAAIb,GAEZJ,EAAakB,iBAAiB,QAASC,GACvChB,EAAYe,iBAAiB,QAASE,GACtCZ,EAAUU,iBAAiB,QAASG,GAEpC,IAAIC,EAAe,GAEnB,SAASH,EAAWI,GAClBA,EAAEC,iBACFC,EAAcF,EAAEG,OAAOC,OACvBxB,EAAYyB,UAAY,GAG1B,MAAMH,EAAgB,MAAA,IAQbI,aAPgBC,2DACgCC,mDAE5BC,OACKC,KAAKC,IACnCC,EAAiBD,EAAKE,aAK1B,SAASC,EAAaC,GACZ,2DAEgBA,kBAK1B,SAASH,EAAiBI,GACxBA,EAAIC,QAAQC,IACVnB,EAAaoB,KAAKD,EAAGE,YACrBxC,EAAYyC,mBAAmB,aAAcP,EAAaI,EAAGE,WAAWE,UAAUlB,UAItF,SAASP,EAAcG,GACrBP,QAAQC,IAAIjB,EAAa2B,OACzBxB,EAAYyB,UAAY,GACxB5B,EAAa2B,MAAQJ,EAAEG,OAAOoB,YAC9BxB,EAAakB,QAAQO,IACfA,EAAKF,UAAUlB,QAAUJ,EAAEG,OAAOoB,cACpCzC,EAASsB,MAAQoB,EAAKC,4BAA4BrB,MAClD3B,EAAa2B,MAAQoB,EAAKE,QAAQtB,MAClCrB,EAAaqB,MAAQoB,EAAKG,QAAQvB,MAClCpB,EAAiBoB,MAAQoB,EAAKI,QAAQxB,SAK5C,SAASN,EAAYE,GAKXd,OAAAA,EAAgBmB,kEACI,oBAAsBlB,EAAUiB,2CAChC,eAAiBhB,EAAiBgB,2CAClC,mBAAqBf,EAAae,2CAClC,aAAed,EAAgBc,2CAC/B,eAAiBb,EAAca,2CAC/B,UAAY3B,EAAa2B,4CACzB,UAAYtB,EAASsB,2CACrB,eAAiBrB,EAAaqB,2CAC9B,eAAiBpB,EAAiBoB,2CAClC,eAAiBZ,EAAaY","file":"orders.c2d5bfca.js","sourceRoot":"../src","sourcesContent":["const inputContact = document.querySelector('.search');\nconst inputResult = document.querySelector('.search_result');\nconst inputForm = document.querySelector('.search-form');\nconst inputTel = document.querySelector('.tel');\nconst inputAddress = document.querySelector('.address-office');\nconst inputAddressPost = document.querySelector('.address-post');\nconst submitBtn = document.querySelector('#submit');\nconst dataListConfirm = document.querySelector('.data-list');\nconst inputData = document.querySelector('.data');\nconst inputOrderNumber = document.querySelector('.number-order');\nconst inputPayForm = document.querySelector('.pay-form');\nconst inputPayControl = document.querySelector('.pay-control');\nconst inputDelivery = document.querySelector('.delivery');\nconst additionText = document.querySelector('.add-text');\nconsole.log(inputForm);\n\ninputContact.addEventListener('input', bodyMarkup);\ninputResult.addEventListener('click', showNameInput);\nsubmitBtn.addEventListener('click', confirmInfo);\n\nlet contactProps = [];\n\nfunction bodyMarkup(e) {\n  e.preventDefault();\n  resultFromAPI(e.target.value);\n  inputResult.innerHTML = '';\n}\n\nconst resultFromAPI = async key => {\n  const response = await fetch(\n    `https://api.hubapi.com/contacts/v1/search/query?q=${key}&hapikey=2527e68b-a1f0-4ae5-868a-c0b95b69e8e3`,\n  );\n  const wordsJson = response.json();\n  const wordsJsonData = wordsJson.then(text => {\n    renderCollection(text.contacts);\n  });\n  return wordsJsonData;\n};\n\nfunction showNameList(countryNameArray) {\n  return `\n<ul class='name-list'>\n  <li class='name-item'>${countryNameArray}</li>\n</ul>\n`;\n}\n\nfunction renderCollection(arr) {\n  arr.forEach(el => {\n    contactProps.push(el.properties);\n    inputResult.insertAdjacentHTML('afterbegin', showNameList(el.properties.firstname.value));\n  });\n}\n\nfunction showNameInput(e) {\n  console.log(inputContact.value);\n  inputResult.innerHTML = '';\n  inputContact.value = e.target.textContent;\n  contactProps.forEach(prop => {\n    if (prop.firstname.value === e.target.textContent) {\n      inputTel.value = prop.hs_calculated_mobile_number.value;\n      inputContact.value = prop.company.value;\n      inputAddress.value = prop.address.value;\n      inputAddressPost.value = prop.country.value;\n    }\n  });\n}\n\nfunction confirmInfo(e) {\n  // if (contactProps.company.value !== inputContact.value) {\n  //   updateAPI(`property: 'firstname', value: ${inputContact.value}`);\n  // }\n\n  return (dataListConfirm.innerHTML = ` <ul class=\"name-list\">\n      <li class=\"name-item\">${'дата отгрузки -- ' + inputData.value}</li>\n      <li class=\"name-item\">${'№ заказа -- ' + inputOrderNumber.value}</li>\n      <li class=\"name-item\">${'форма оплаты -- ' + inputPayForm.value}</li>\n      <li class=\"name-item\">${'оплата -- ' + inputPayControl.value}</li>\n      <li class=\"name-item\">${'отгрузка -- ' + inputDelivery.value}</li>\n      <li class=\"name-item\">${'фио -- ' + inputContact.value}</li> \n      <li class=\"name-item\">${'тел -- ' + inputTel.value}</li>\n      <li class=\"name-item\">${'доставка -- ' + inputAddress.value}</li>\n      <li class=\"name-item\">${'отправка -- ' + inputAddressPost.value}</li>\n      <li class=\"name-item\">${'доп.инфо -- ' + additionText.value}</li>\n    </ul>`);\n}\n\n// const updateAPI = async () => {\n//   const response = await POST(\n//     `https://api.hubapi.com/contacts/v1/contact/createOrUpdate/hapikey=2527e68b-a1f0-4ae5-868a-c0b95b69e8e3`,\n//   );\n//   const wordsJson = response.json();\n//   const wordsJsonData = wordsJson.then(property => {\n//     [{ prop }];\n//   });\n//   return wordsJsonData;\n// };\n"]}